---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-bot
secrets:
  - name: basic-user-pass-docker
  - name: basic-user-pass-git

---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: git-repo
spec:
  type: git
  params:
    - name: url
      value: https://github.com/rstanevich/builds-demo
    - name: revision
      value: main

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: test
spec:
  resources:
    inputs:
      - name: repo
        type: git
  steps:
    - name: run-test
      image: golang:1.16-alpine
      workingDir: /workspace/repo
      command: ["go"]
      args: ["test"]

---

#
# BUILDAH
#

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
spec:
  resources:
    inputs:
      - name: repo
        type: git
  workspaces:
    - name: cached-dir
      optional: true
      mountPath: /workspace/cache
  steps:
    - name: build
      image: quay.io/buildah/stable:v1.23.3
      securityContext:
        privileged: true
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      command:
        - sh
        - -c
        - buildah build --layers -f /workspace/repo/Dockerfile -t russtanevich/builds-demo-buildah:v1.0 /workspace/repo/;
          buildah push russtanevich/builds-demo-buildah:v1.0;

---

#
# BUILDKIT
#

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildkit-inline-registry-cache
spec:
  resources:
    inputs:
      - name: repo
        type: git
  workspaces:
    - name: cached-dir
      optional: true
      mountPath: /workspace/cache
  steps:
    - name: build
      image: moby/buildkit:v0.10.3
      securityContext:
        privileged: true
      env:
        # needs resolve ownership of mounted git and docker config etc
        # - name: BUILDKITD_FLAGS
        #   value: --oci-worker-no-process-sandbox
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      command:
        # https://github.com/moby/buildkit#daemonless
        - buildctl-daemonless.sh
        - build
        - --frontend=dockerfile.v0
        - --local=context=/workspace/repo
        - --local=dockerfile=/workspace/repo
        - --output=type=image,"name=docker.io/russtanevich/builds-demo-buildkit-inline-registry-cache:v1.0,docker.io/russtanevich/builds-demo-buildkit-inline-registry-cache:latest",push=true
        - --export-cache=type=inline
        - --import-cache=type=registry,ref=docker.io/russtanevich/builds-demo-buildkit-inline-registry-cache:latest

---

#
# KANIKO
#

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kaniko-remote-registry-cache
spec:
  resources:
    inputs:
      - name: repo
        type: git
  workspaces:
    - name: cached-dir
      optional: true
      mountPath: /workspace/cache
  steps:
    - name: ensure-base-image-pulled
      image: gcr.io/kaniko-project/warmer:v1.8.1
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      command:
        - /kaniko/warmer
        # https://github.com/GoogleContainerTools/kaniko/issues/1142
        - --image=ubuntu:22.04
        - --cache-dir=/workspace/cache

    # https://github.com/GoogleContainerTools/kaniko/issues/875
    - name: build
      image: gcr.io/kaniko-project/executor:v1.8.1
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
      command:
        - /kaniko/executor
        - --dockerfile=Dockerfile
        - --context=/workspace/repo
        # https://github.com/GoogleContainerTools/kaniko/issues/524#issuecomment-455780091
        - --destination=russtanevich/builds-demo-kaniko-cache:v1.0
        # https://github.com/GoogleContainerTools/kaniko#caching
        - --cache-repo=russtanevich/builds-demo-kaniko-cache
        - --cache=true
        - --cache-dir=/workspace/cache


---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci
spec:
  resources:
    - name: repo
      type: git
  tasks:
    # Run application tests
    - name: test
      taskRef:
        name: test
      resources:
        inputs:
          - name: repo
            resource: repo

    # Build docker image and push to registry
    - name: buildah
      taskRef:
        name: buildah
      runAfter:
        - test
      resources:
        inputs:
          - name: repo
            resource: repo

    - name: buildkit-inline-registry-cache
      taskRef:
        name: buildkit-inline-registry-cache
      runAfter:
        - test
      resources:
        inputs:
          - name: repo
            resource: repo

    - name: kaniko-remote-registry-cache
      taskRef:
        name: kaniko-remote-registry-cache
      runAfter:
        - test
      resources:
        inputs:
          - name: repo
            resource: repo
